{"ast":null,"code":"class IntuitClient {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080/api\";\n  }\n  async fetchData() {\n    return this.fetchDataWithMethod('GET', '/intuit/get/all');\n  }\n  async createIntuitPlayer(IntuitData) {\n    return this.fetchDataWithMethod('POST', '/intuit/create', IntuitData);\n  }\n  async updateIntuitPlayer(IntuitData) {\n    return this.fetchDataWithMethod('PUT', `/intuit/update`, IntuitData);\n  }\n  async deleteIntuitPlayer(IntuitId) {\n    return this.fetchDataWithMethod('DELETE', `/intuit/delete/${IntuitId}`);\n  }\n  async validUser(userData) {\n    return this.fetchDataWithMethod('POST', '/user/validUser', userData);\n  }\n  async getUser(userData) {\n    return this.fetchDataWithMethod('POST', '/user/get', userData);\n  }\n  async signUp(userData) {\n    return this.fetchDataWithMethod('POST', '/user/signup', userData);\n  }\n  async updateUser(userData) {\n    return this.fetchDataWithMethod('POST', '/user/update', userData);\n  }\n  async signIn(userData) {\n    return this.fetchDataWithMethod('POST', '/user/signin', userData);\n  }\n  async fetchDataWithMethod(method, endpoint, bodyData) {\n    const url = this.baseUrl + endpoint;\n    const options = {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        mode: 'cors',\n        credentials: 'include'\n      }\n    };\n    if (bodyData) {\n      options.body = JSON.stringify(bodyData);\n    }\n    try {\n      const response = await fetch(url, options);\n      console.log('Response Status:', response.status);\n\n      // Check if the response status is in the range of 200-299 (successful responses)\n\n      // Attempt to parse the response as JSON\n      const text = await response.text();\n      let jsonData;\n      try {\n        jsonData = JSON.parse(text);\n      } catch (e) {\n        console.log('Invalid json data', jsonData);\n        jsonData = response;\n      }\n      return jsonData;\n    } catch (error) {\n      console.error('Error:', error);\n      throw error;\n    }\n  }\n}\nexport default IntuitClient;","map":{"version":3,"names":["IntuitClient","constructor","baseUrl","fetchData","fetchDataWithMethod","createIntuitPlayer","IntuitData","updateIntuitPlayer","deleteIntuitPlayer","IntuitId","validUser","userData","getUser","signUp","updateUser","signIn","method","endpoint","bodyData","url","options","headers","mode","credentials","body","JSON","stringify","response","fetch","console","log","status","text","jsonData","parse","e","error"],"sources":["/Users/keshav/intuit/IntuitCraftDemoUI/src/client/IntuitClient.js"],"sourcesContent":["class IntuitClient {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080/api\";\n  }\n\n  async fetchData() {\n    return this.fetchDataWithMethod('GET', '/intuit/get/all');\n  }\n\n  async createIntuitPlayer(IntuitData) {\n    return this.fetchDataWithMethod('POST', '/intuit/create', IntuitData);\n  }\n\n  async updateIntuitPlayer(IntuitData) {\n    return this.fetchDataWithMethod('PUT', `/intuit/update`, IntuitData);\n  }\n\n  async deleteIntuitPlayer(IntuitId) {\n    return this.fetchDataWithMethod('DELETE', `/intuit/delete/${IntuitId}`);\n  }\n\n\n  async validUser(userData) {\n    return this.fetchDataWithMethod('POST', '/user/validUser', userData);\n  }\n\n  async getUser(userData) {\n    return this.fetchDataWithMethod('POST', '/user/get', userData);\n  }\n\n  async signUp(userData) {\n    return this.fetchDataWithMethod('POST', '/user/signup', userData);\n  }\n\n  async updateUser(userData) {\n    return this.fetchDataWithMethod('POST', '/user/update', userData);\n  }\n\n  async signIn(userData) {\n    return this.fetchDataWithMethod('POST', '/user/signin', userData);\n  }\n\n\n  async fetchDataWithMethod(method, endpoint, bodyData) {\n    const url = this.baseUrl + endpoint;\n    const options = {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        mode: 'cors',\n        credentials: 'include'\n      },\n    };\n  \n    if (bodyData) {\n      options.body = JSON.stringify(bodyData);\n    }\n  \n    try {\n      const response = await fetch(url, options);\n      console.log('Response Status:',  response.status);\n  \n      // Check if the response status is in the range of 200-299 (successful responses)\n      \n  \n      // Attempt to parse the response as JSON\n      const text = await response.text();\n      let jsonData;\n  \n      try {\n        jsonData = JSON.parse(text);\n      } catch (e) {\n        console.log('Invalid json data', jsonData);\n        jsonData = response;\n      }\n  \n      return jsonData;\n    } catch (error) {\n      console.error('Error:', error);\n      throw error;\n    }\n  }\n}\n\nexport default IntuitClient;\n"],"mappings":"AAAA,MAAMA,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,2BAA2B;EAC5C;EAEA,MAAMC,SAASA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACC,mBAAmB,CAAC,KAAK,EAAE,iBAAiB,CAAC;EAC3D;EAEA,MAAMC,kBAAkBA,CAACC,UAAU,EAAE;IACnC,OAAO,IAAI,CAACF,mBAAmB,CAAC,MAAM,EAAE,gBAAgB,EAAEE,UAAU,CAAC;EACvE;EAEA,MAAMC,kBAAkBA,CAACD,UAAU,EAAE;IACnC,OAAO,IAAI,CAACF,mBAAmB,CAAC,KAAK,EAAE,gBAAgB,EAAEE,UAAU,CAAC;EACtE;EAEA,MAAME,kBAAkBA,CAACC,QAAQ,EAAE;IACjC,OAAO,IAAI,CAACL,mBAAmB,CAAC,QAAQ,EAAE,kBAAkBK,QAAQ,EAAE,CAAC;EACzE;EAGA,MAAMC,SAASA,CAACC,QAAQ,EAAE;IACxB,OAAO,IAAI,CAACP,mBAAmB,CAAC,MAAM,EAAE,iBAAiB,EAAEO,QAAQ,CAAC;EACtE;EAEA,MAAMC,OAAOA,CAACD,QAAQ,EAAE;IACtB,OAAO,IAAI,CAACP,mBAAmB,CAAC,MAAM,EAAE,WAAW,EAAEO,QAAQ,CAAC;EAChE;EAEA,MAAME,MAAMA,CAACF,QAAQ,EAAE;IACrB,OAAO,IAAI,CAACP,mBAAmB,CAAC,MAAM,EAAE,cAAc,EAAEO,QAAQ,CAAC;EACnE;EAEA,MAAMG,UAAUA,CAACH,QAAQ,EAAE;IACzB,OAAO,IAAI,CAACP,mBAAmB,CAAC,MAAM,EAAE,cAAc,EAAEO,QAAQ,CAAC;EACnE;EAEA,MAAMI,MAAMA,CAACJ,QAAQ,EAAE;IACrB,OAAO,IAAI,CAACP,mBAAmB,CAAC,MAAM,EAAE,cAAc,EAAEO,QAAQ,CAAC;EACnE;EAGA,MAAMP,mBAAmBA,CAACY,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACpD,MAAMC,GAAG,GAAG,IAAI,CAACjB,OAAO,GAAGe,QAAQ;IACnC,MAAMG,OAAO,GAAG;MACdJ,MAAM,EAAEA,MAAM;MACdK,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,IAAI,EAAE,MAAM;QACZC,WAAW,EAAE;MACf;IACF,CAAC;IAED,IAAIL,QAAQ,EAAE;MACZE,OAAO,CAACI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC;IACzC;IAEA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEC,OAAO,CAAC;MAC1CS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAGH,QAAQ,CAACI,MAAM,CAAC;;MAEjD;;MAGA;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAIC,QAAQ;MAEZ,IAAI;QACFA,QAAQ,GAAGR,IAAI,CAACS,KAAK,CAACF,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOG,CAAC,EAAE;QACVN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,QAAQ,CAAC;QAC1CA,QAAQ,GAAGN,QAAQ;MACrB;MAEA,OAAOM,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAepC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}