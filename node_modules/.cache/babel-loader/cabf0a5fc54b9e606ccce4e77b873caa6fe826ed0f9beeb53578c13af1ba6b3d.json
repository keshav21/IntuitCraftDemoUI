{"ast":null,"code":"var _jsxFileName = \"/Users/keshav/intuit/IntuitCraftDemoUI/src/App.js\",\n  _s = $RefreshSig$();\nimport './css/App.css';\nimport React, { useState, useEffect } from 'react';\nimport IntuitClient from './client/IntuitClient';\nimport Welcome from './components/Welcome';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignupForm';\nimport SignoutButton from './components/SignoutButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const intuitClient = new IntuitClient();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  // const [players, setPlayers] = useState([]);\n  // const getPlayers = async () => {\n  //   try {\n  //     let newPlayers = {};\n  //     const response =  await intuitClient.fetchData();\n  //     console.log('response'+ response.content);\n  //     newPlayers = response.content.map(d=> ({\n  //       id: d.id,\n  //       player: d.player,\n  //       mat: d.mat,\n  //       inns: d.inns,\n  //       no: d.no,\n  //       runs: d.runs,\n  //       hs: d.hs,\n  //       sr: d.sr,\n  //       hundred: d.hundred,\n  //       fifty: d.fifty\n  //     })) \n  //     return newPlayers;\n  //   } catch (error) {\n  //     console.error('Error fetching tasks:', error);\n  //   }\n  // };\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await intuitClient.signIn({\n        email,\n        password\n      });\n      console.log('handleLogin' + response);\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n      } else {\n        alert('Error logging in. Incorrect Credentials');\n      }\n    } catch (error) {\n      alert('Error logging in. Please try again.');\n    }\n  };\n  const handleSignup = async (firstName, lastName, email, password) => {\n    try {\n      const response = await intuitClient.signUp({\n        firstName,\n        lastName,\n        email,\n        password\n      });\n      console.log(`Signup successful for ${firstName} ${lastName} with email ${email}`);\n      setIsSignup(false);\n    } catch (error) {\n      alert('Error signing up. Please try again.');\n    }\n  };\n  const handleSignout = () => {\n    setIsLoggedIn(false);\n  };\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //      const newPlayers = await getPlayers();\n  //      setPlayers(newPlayers);\n  //   }\n  //   fetchData();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Intuit Craft Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignoutButton, {\n        onSignout: handleSignout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : isSignup ? /*#__PURE__*/_jsxDEV(SignupForm, {\n      onSignup: handleSignup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-form\",\n      children: isSignup ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSignup(false),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSignup(true),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"erT/lax0PtyulCsqdNb06ybmriU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","IntuitClient","Welcome","LoginForm","SignupForm","SignoutButton","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","intuitClient","isLoggedIn","setIsLoggedIn","isSignup","setIsSignup","handleLogin","email","password","response","signIn","console","log","status","alert","error","handleSignup","firstName","lastName","signUp","handleSignout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSignout","onSignup","onLogin","onClick","_c","$RefreshReg$"],"sources":["/Users/keshav/intuit/IntuitCraftDemoUI/src/App.js"],"sourcesContent":["\nimport './css/App.css';\n\nimport React, { useState ,useEffect } from 'react';\nimport IntuitClient from './client/IntuitClient';\nimport Welcome from './components/Welcome';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignupForm';\nimport SignoutButton from './components/SignoutButton';\nfunction App() {\n\n  const intuitClient = new IntuitClient();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  // const [players, setPlayers] = useState([]);\n  // const getPlayers = async () => {\n  //   try {\n  //     let newPlayers = {};\n  //     const response =  await intuitClient.fetchData();\n  //     console.log('response'+ response.content);\n  //     newPlayers = response.content.map(d=> ({\n  //       id: d.id,\n  //       player: d.player,\n  //       mat: d.mat,\n  //       inns: d.inns,\n  //       no: d.no,\n  //       runs: d.runs,\n  //       hs: d.hs,\n  //       sr: d.sr,\n  //       hundred: d.hundred,\n  //       fifty: d.fifty\n  //     })) \n  //     return newPlayers;\n  //   } catch (error) {\n  //     console.error('Error fetching tasks:', error);\n  //   }\n  // };\n\n  const handleLogin = async (email, password) => {\n    \n    try {\n      const response = await intuitClient.signIn({ email, password });\n      console.log('handleLogin'+ response);\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n      } else {\n        alert('Error logging in. Incorrect Credentials');\n      }\n    } catch (error) {\n      alert('Error logging in. Please try again.');\n    }\n  };\n\n  const handleSignup = async (firstName, lastName, email, password) => {\n   \n    try {\n      const response = await intuitClient.signUp({ firstName, lastName, email, password });\n      console.log(`Signup successful for ${firstName} ${lastName} with email ${email}`);\n      setIsSignup(false);\n    } catch (error) {\n      alert('Error signing up. Please try again.');\n    }\n\n  };\n\n  const handleSignout = () => {\n    setIsLoggedIn(false);\n  };\n\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //      const newPlayers = await getPlayers();\n  //      setPlayers(newPlayers);\n  //   }\n  //   fetchData();\n  // }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Intuit Craft Demo\n        </p>\n      </header>\n      \n      {isLoggedIn ? (\n        <>\n        <Welcome />\n        <SignoutButton onSignout={handleSignout} />\n        </>\n       \n      ) : (\n        isSignup ? (\n          <SignupForm onSignup={handleSignup} />\n        ) : (\n          <LoginForm onLogin={handleLogin} />\n        )\n      )}\n      {!isLoggedIn && (\n        <div className=\"toggle-form\">\n          {isSignup ? (\n            <p>\n              Already have an account?{' '}\n              <button onClick={() => setIsSignup(false)}>Login</button>\n            </p>\n          ) : (\n            <p>\n              Don't have an account?{' '}\n              <button onClick={() => setIsSignup(true)}>Sign Up</button>\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}